@model Registration1.Models.Entities
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registration - Inventory Management System</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/4.6.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }

        body {
            background: #f8f9fa;
            min-height: 100vh;
            width: 100%;
        }

        .navbar {
            background: white;
            box-shadow: 0 2px 4px rgba(0,0,0,.1);
        }

        .container {
            padding: 20px;
        }

        .registration-card {
            width: 100%;
            max-width: 800px;
            margin: 20px auto;
            padding: 0;
        }

        .card {
            border: none;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,.1);
        }

        .card-header {
            background: white;
            border-bottom: 1px solid #f1f1f1;
            padding: 1.5rem;
        }

        .logo {
            font-size: 1.5rem;
            font-weight: bold;
            color: #333;
        }

            .logo span {
                color: #00b3ff;
            }

        .form-control {
            border-radius: 6px;
            padding: .75rem 1rem;
            height: auto;
            border: 1px solid #e2e8f0;
        }

            .form-control:focus {
                border-color: #4a5568;
                box-shadow: 0 0 0 0.2rem rgba(74, 85, 104, 0.25);
            }

        .form-group label {
            font-weight: 500;
            color: #4a5568;
        }

        .btn-primary {
            padding: .75rem 1.5rem;
            font-weight: 500;
            border-radius: 6px;
            background-color: #00b3ff;
            border-color: #00b3ff;
        }

            .btn-primary:hover {
                background-color: #0099df;
                border-color: #0099df;
            }

        .btn-success {
            padding: .75rem 1.5rem;
            font-weight: 500;
            border-radius: 6px;
        }

        .text-danger {
            font-size: 0.875rem;
            margin-top: 0.25rem;
        }

        .is-invalid {
            border-color: #dc3545;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light">
        <div class="container">
            <h4 class="logo mb-0">HUB<span>Dash</span></h4>
            <ul class="navbar-nav ml-auto">
                <li class="nav-item">
                    <a href="@Url.Action("Logout", "Home")" class="nav-link">
                        <i class="fas fa-sign-out-alt mr-1"></i> Logout
                    </a>
                </li>
            </ul>
        </div>
    </nav>

    <div class="container">
        <div class="registration-card">
            <div class="card">
                <div class="card-body p-4">
                    @using (Html.BeginForm("Register", "Home", FormMethod.Post, new { @id = "registrationForm" }))
                    {
                        @Html.Raw(TempData["SuccessMessage"])
                        @Html.AntiForgeryToken()
                        HtmlHelper.UnobtrusiveJavaScriptEnabled = false;

                        <h3 class="mb-4 text-center">Employee Registration</h3>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <div class="form-group">
                                    <label for="FirstName">First Name</label>
                                    @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", @maxlength = "250", id = "FirstName" })
                                    @Html.HiddenFor(model => model.Id)
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <div class="form-group">
                                    <label for="LastName">Last Name</label>
                                    @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", @maxlength = "250", id = "LastName" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <div class="form-group">
                                    <label for="Email">Email</label>
                                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @maxlength = "250", id = "Email" })
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <div class="form-group">
                                    <label for="Birthdate">Birth Date</label>
                                    @Html.TextBoxFor(model => model.Birthdate, new { @class = "form-control", @maxlength = "250", id = "Birthdate", type = "date" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <div class="form-group">
                                    <label for="PhoneNumber">Phone Number</label>
                                    @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control", @maxlength = "250", id = "PhoneNumber" })
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <div class="form-group">
                                    <label for="Address">Address</label>
                                    @Html.TextBoxFor(model => model.Address, new { @class = "form-control", @maxlength = "250", id = "Address" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <div class="form-group">
                                    <label for="State">State</label>
                                    <select id="State" class="form-control">
                                        <option value="">Select State</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <div class="form-group">
                                    <label for="City">City</label>
                                    <select id="City" class="form-control">
                                        <option value="">Select City</option>
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <div class="form-group">
                                    <label for="Password">Password</label>
                                    @Html.PasswordFor(model => model.Password, new { @class = "form-control", @maxlength = "250", id = "Password" })
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <div class="form-group">
                                    <label for="ConfirmPassword">Confirm Password</label>
                                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", @maxlength = "250", id = "ConfirmPassword" })
                                </div>
                            </div>
                        </div>

                        <div class="d-flex justify-content-end mt-4">
                            <button type="button" class="btn btn-primary mr-2" id="ClearButton">
                                <i class="fas fa-redo mr-1"></i>Reset
                            </button>
                            <button type="button" class="btn btn-success" id="InsertButton">
                                <i class="fas fa-check mr-1"></i>Submit
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/4.0.0/jquery.validate.unobtrusive.min.js"></script>
    <script>
        // Session timeout
        setTimeout(function () {
            alert("Session expired! Redirecting to login page.");
            window.location.href = "/Home/Login";
        }, @(Session.Timeout * 60000));

        // City-State data
        var cityState = {
            "States": {
                "Gujrat": ["Kutch", "Vadodara", "Ahmedabad"],
                "Maharashtra": ["Mumbai", "Pune", "Nashik"],
                "Rajasthan": ["Jaipur", "Jaisalmer", "Udaipur"]
            }
        };

        // Initialize state-city dropdowns
        window.onload = function () {
            var state = document.getElementById("State");
            var city = document.getElementById("City");

            for (var x in cityState.States) {
                state.options[state.options.length] = new Option(x, x);
            }

            state.onchange = function () {
                city.length = 1;
                var selectedState = this.value;
                if (selectedState in cityState.States) {
                    cityState.States[selectedState].forEach(function (cityName) {
                        city.options[city.options.length] = new Option(cityName, cityName);
                    });
                }
            };
        };

        // Form validation
        $(document).ready(function () {
            $("#registrationForm").validate({
                rules: {
                    FirstName: { required: true, minlength: 3 },
                    LastName: { required: true, minlength: 3 },
                    Email: { required: true, email: true },
                    Birthdate: { required: true, date: true },
                    PhoneNumber: { required: true, digits: true, minlength: 10, maxlength: 15 },
                    Address: { required: true, minlength: 5 },
                    City: { required: true },
                    State: { required: true },
                    Password: { required: true, minlength: 6 },
                    ConfirmPassword: { required: true, equalTo: "#Password" }
                },
                messages: {
                    FirstName: { required: "First name is required", minlength: "At least 3 characters required" },
                    LastName: { required: "Last name is required", minlength: "At least 3 characters required" },
                    Email: { required: "Email is required", email: "Enter a valid email" },
                    Birthdate: { required: "Birthdate is required", date: "Enter a valid date" },
                    PhoneNumber: { required: "Phone number is required", digits: "Only numbers allowed", minlength: "Must be at least 10 digits", maxlength: "Cannot exceed 15 digits" },
                    Address: { required: "Address is required", minlength: "At least 5 characters required" },
                    City: { required: "City is required" },
                    State: { required: "State is required" },
                    Password: { required: "Password is required", minlength: "At least 6 characters required" },
                    ConfirmPassword: { required: "Confirm your password", equalTo: "Passwords do not match" }
                },
                errorPlacement: function (error, element) {
                    error.appendTo(element.parent());
                    error.addClass("text-danger");
                },
                highlight: function (element) {
                    $(element).addClass("is-invalid");
                },
                unhighlight: function (element) {
                    $(element).removeClass("is-invalid");
                },
                submitHandler: function (form) {
                    alert("Form submitted successfully!");
                    form.submit();
                }
            });
        });
    </script>
</body>
</html>